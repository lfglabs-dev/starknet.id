[
  {
    "type": "impl",
    "name": "NamingImpl",
    "interface_name": "naming::interface::naming::INaming"
  },
  {
    "type": "struct",
    "name": "core::array::Span::<core::felt252>",
    "members": [
      { "name": "snapshot", "type": "@core::array::Array::<core::felt252>" }
    ]
  },
  {
    "type": "struct",
    "name": "naming::naming::main::Naming::DomainData",
    "members": [
      { "name": "owner", "type": "core::integer::u128" },
      {
        "name": "resolver",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      { "name": "expiry", "type": "core::integer::u64" },
      { "name": "key", "type": "core::integer::u32" },
      { "name": "parent_key", "type": "core::integer::u32" }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      { "name": "low", "type": "core::integer::u128" },
      { "name": "high", "type": "core::integer::u128" }
    ]
  },
  {
    "type": "struct",
    "name": "naming::naming::main::Naming::Discount",
    "members": [
      {
        "name": "domain_len_range",
        "type": "(core::integer::u32, core::integer::u32)"
      },
      {
        "name": "days_range",
        "type": "(core::integer::u16, core::integer::u16)"
      },
      {
        "name": "timestamp_range",
        "type": "(core::integer::u64, core::integer::u64)"
      },
      { "name": "amount", "type": "core::integer::u256" }
    ]
  },
  {
    "type": "interface",
    "name": "naming::interface::naming::INaming",
    "items": [
      {
        "type": "function",
        "name": "resolve",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" },
          { "name": "field", "type": "core::felt252" },
          { "name": "hint", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [{ "type": "core::felt252" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "domain_to_data",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [{ "type": "naming::naming::main::Naming::DomainData" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "domain_to_expiry",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [{ "type": "core::integer::u64" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "domain_to_id",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [{ "type": "core::integer::u128" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "domain_to_address",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" },
          { "name": "hint", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [
          { "type": "core::starknet::contract_address::ContractAddress" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "_debug_addr_to_domain_alpha",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [{ "type": "core::array::Array::<core::felt252>" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "address_to_domain",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [{ "type": "core::array::Span::<core::felt252>" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "buy",
        "inputs": [
          { "name": "id", "type": "core::integer::u128" },
          { "name": "domain", "type": "core::felt252" },
          { "name": "days", "type": "core::integer::u16" },
          {
            "name": "resolver",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "sponsor",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          { "name": "discount_id", "type": "core::felt252" },
          { "name": "metadata", "type": "core::felt252" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renew",
        "inputs": [
          { "name": "domain", "type": "core::felt252" },
          { "name": "days", "type": "core::integer::u16" },
          {
            "name": "sponsor",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          { "name": "discount_id", "type": "core::felt252" },
          { "name": "metadata", "type": "core::felt252" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "transfer_domain",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" },
          { "name": "target_id", "type": "core::integer::u128" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "reset_subdomains",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_address_to_domain",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "clear_legacy_domain_to_address",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "reset_address_to_domain",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "migrate_domain",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_domain_to_resolver",
        "inputs": [
          { "name": "domain", "type": "core::array::Span::<core::felt252>" },
          {
            "name": "resolver",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_admin",
        "inputs": [
          {
            "name": "new_admin",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_expiry",
        "inputs": [
          { "name": "root_domain", "type": "core::felt252" },
          { "name": "expiry", "type": "core::integer::u64" },
          { "name": "metadata", "type": "core::felt252" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "claim_balance",
        "inputs": [
          {
            "name": "erc20",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_discount",
        "inputs": [
          { "name": "discount_id", "type": "core::felt252" },
          {
            "name": "discount",
            "type": "naming::naming::main::Naming::Discount"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_pricing_contract",
        "inputs": [
          {
            "name": "pricing_contract",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_referral_contract",
        "inputs": [
          {
            "name": "referral_contract",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "StorageReadComponent",
    "interface_name": "storage_read::interface::IStorageRead"
  },
  {
    "type": "interface",
    "name": "storage_read::interface::IStorageRead",
    "items": [
      {
        "type": "function",
        "name": "storage_read",
        "inputs": [
          { "name": "address_domain", "type": "core::integer::u32" },
          {
            "name": "address",
            "type": "core::starknet::storage_access::StorageAddress"
          }
        ],
        "outputs": [{ "type": "core::felt252" }],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "starknetid",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "pricing",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "referral",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "admin",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::DomainMint",
    "kind": "struct",
    "members": [
      { "name": "domain", "type": "core::felt252", "kind": "key" },
      { "name": "owner", "type": "core::integer::u128", "kind": "data" },
      { "name": "expiry", "type": "core::integer::u64", "kind": "data" }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::DomainRenewal",
    "kind": "struct",
    "members": [
      { "name": "domain", "type": "core::felt252", "kind": "key" },
      { "name": "new_expiry", "type": "core::integer::u64", "kind": "data" }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::DomainResolverUpdate",
    "kind": "struct",
    "members": [
      {
        "name": "domain",
        "type": "core::array::Span::<core::felt252>",
        "kind": "key"
      },
      {
        "name": "resolver",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::LegacyDomainToAddressClear",
    "kind": "struct",
    "members": [
      {
        "name": "domain",
        "type": "core::array::Span::<core::felt252>",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::AddressToDomainUpdate",
    "kind": "struct",
    "members": [
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "domain",
        "type": "core::array::Span::<core::felt252>",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::DomainTransfer",
    "kind": "struct",
    "members": [
      {
        "name": "domain",
        "type": "core::array::Span::<core::felt252>",
        "kind": "key"
      },
      { "name": "prev_owner", "type": "core::integer::u128", "kind": "data" },
      { "name": "new_owner", "type": "core::integer::u128", "kind": "data" }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::DomainMigrated",
    "kind": "struct",
    "members": [
      {
        "name": "domain",
        "type": "core::array::Span::<core::felt252>",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::SubdomainsReset",
    "kind": "struct",
    "members": [
      {
        "name": "domain",
        "type": "core::array::Span::<core::felt252>",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::SaleMetadata",
    "kind": "struct",
    "members": [
      { "name": "domain", "type": "core::felt252", "kind": "data" },
      { "name": "metadata", "type": "core::felt252", "kind": "data" }
    ]
  },
  {
    "type": "event",
    "name": "storage_read::main::storage_read_component::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "naming::naming::main::Naming::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "DomainMint",
        "type": "naming::naming::main::Naming::DomainMint",
        "kind": "nested"
      },
      {
        "name": "DomainRenewal",
        "type": "naming::naming::main::Naming::DomainRenewal",
        "kind": "nested"
      },
      {
        "name": "DomainResolverUpdate",
        "type": "naming::naming::main::Naming::DomainResolverUpdate",
        "kind": "nested"
      },
      {
        "name": "LegacyDomainToAddressClear",
        "type": "naming::naming::main::Naming::LegacyDomainToAddressClear",
        "kind": "nested"
      },
      {
        "name": "AddressToDomainUpdate",
        "type": "naming::naming::main::Naming::AddressToDomainUpdate",
        "kind": "nested"
      },
      {
        "name": "DomainTransfer",
        "type": "naming::naming::main::Naming::DomainTransfer",
        "kind": "nested"
      },
      {
        "name": "DomainMigrated",
        "type": "naming::naming::main::Naming::DomainMigrated",
        "kind": "nested"
      },
      {
        "name": "SubdomainsReset",
        "type": "naming::naming::main::Naming::SubdomainsReset",
        "kind": "nested"
      },
      {
        "name": "SaleMetadata",
        "type": "naming::naming::main::Naming::SaleMetadata",
        "kind": "nested"
      },
      {
        "name": "StorageReadEvent",
        "type": "storage_read::main::storage_read_component::Event",
        "kind": "nested"
      }
    ]
  }
]
